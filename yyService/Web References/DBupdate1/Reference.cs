//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.1 版自动生成。
// 
#pragma warning disable 1591

namespace yyService.DBupdate1 {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="DBupdateSoapBinding", Namespace="http://ws")]
    public partial class DBupdateService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback outboundInsertMainOperationCompleted;
        
        private System.Threading.SendOrPostCallback outboundUpdateMainOperationCompleted;
        
        private System.Threading.SendOrPostCallback outboundUpdateMainOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback outboundDeleteMainOperationCompleted;
        
        private System.Threading.SendOrPostCallback testOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public DBupdateService() {
            this.Url = global::yyService.Properties.Settings.Default.yyService_DBupdate1_DBupdateService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        public DBupdateService(string url)
        {
            this.Url = "http://" + url + "/GuobangWebservice/services/DBupdate";
            if ((this.IsLocalFileSystemWebService(this.Url) == true))
            {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else
            {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event outboundInsertMainCompletedEventHandler outboundInsertMainCompleted;
        
        /// <remarks/>
        public event outboundUpdateMainCompletedEventHandler outboundUpdateMainCompleted;
        
        /// <remarks/>
        public event outboundUpdateMainOrderCompletedEventHandler outboundUpdateMainOrderCompleted;
        
        /// <remarks/>
        public event outboundDeleteMainCompletedEventHandler outboundDeleteMainCompleted;
        
        /// <remarks/>
        public event testCompletedEventHandler testCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws", ResponseNamespace="http://ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outboundInsertMainReturn")]
        public int outboundInsertMain(int index, int bRdFlag, string dDate, string cBatch, string cInvName, string cWhCode, double iQuantity, string cInvStd, string cVenName, string cCode, string cDepCode, string cBusType, string cMaker, decimal iPrice, double iUnitCost) {
            object[] results = this.Invoke("outboundInsertMain", new object[] {
                        index,
                        bRdFlag,
                        dDate,
                        cBatch,
                        cInvName,
                        cWhCode,
                        iQuantity,
                        cInvStd,
                        cVenName,
                        cCode,
                        cDepCode,
                        cBusType,
                        cMaker,
                        iPrice,
                        iUnitCost});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void outboundInsertMainAsync(int index, int bRdFlag, string dDate, string cBatch, string cInvName, string cWhCode, double iQuantity, string cInvStd, string cVenName, string cCode, string cDepCode, string cBusType, string cMaker, decimal iPrice, double iUnitCost) {
            this.outboundInsertMainAsync(index, bRdFlag, dDate, cBatch, cInvName, cWhCode, iQuantity, cInvStd, cVenName, cCode, cDepCode, cBusType, cMaker, iPrice, iUnitCost, null);
        }
        
        /// <remarks/>
        public void outboundInsertMainAsync(
                    int index, 
                    int bRdFlag, 
                    string dDate, 
                    string cBatch, 
                    string cInvName, 
                    string cWhCode, 
                    double iQuantity, 
                    string cInvStd, 
                    string cVenName, 
                    string cCode, 
                    string cDepCode, 
                    string cBusType, 
                    string cMaker, 
                    decimal iPrice, 
                    double iUnitCost, 
                    object userState) {
            if ((this.outboundInsertMainOperationCompleted == null)) {
                this.outboundInsertMainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoutboundInsertMainOperationCompleted);
            }
            this.InvokeAsync("outboundInsertMain", new object[] {
                        index,
                        bRdFlag,
                        dDate,
                        cBatch,
                        cInvName,
                        cWhCode,
                        iQuantity,
                        cInvStd,
                        cVenName,
                        cCode,
                        cDepCode,
                        cBusType,
                        cMaker,
                        iPrice,
                        iUnitCost}, this.outboundInsertMainOperationCompleted, userState);
        }
        
        private void OnoutboundInsertMainOperationCompleted(object arg) {
            if ((this.outboundInsertMainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.outboundInsertMainCompleted(this, new outboundInsertMainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws", ResponseNamespace="http://ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outboundUpdateMainReturn")]
        public int outboundUpdateMain(int index, int bRdFlag, string dDate, string cBatch, string cInvName, double iQuantity, string cInvStd, decimal iPrice, double iUnitCost) {
            object[] results = this.Invoke("outboundUpdateMain", new object[] {
                        index,
                        bRdFlag,
                        dDate,
                        cBatch,
                        cInvName,
                        iQuantity,
                        cInvStd,
                        iPrice,
                        iUnitCost});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void outboundUpdateMainAsync(int index, int bRdFlag, string dDate, string cBatch, string cInvName, double iQuantity, string cInvStd, decimal iPrice, double iUnitCost) {
            this.outboundUpdateMainAsync(index, bRdFlag, dDate, cBatch, cInvName, iQuantity, cInvStd, iPrice, iUnitCost, null);
        }
        
        /// <remarks/>
        public void outboundUpdateMainAsync(int index, int bRdFlag, string dDate, string cBatch, string cInvName, double iQuantity, string cInvStd, decimal iPrice, double iUnitCost, object userState) {
            if ((this.outboundUpdateMainOperationCompleted == null)) {
                this.outboundUpdateMainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoutboundUpdateMainOperationCompleted);
            }
            this.InvokeAsync("outboundUpdateMain", new object[] {
                        index,
                        bRdFlag,
                        dDate,
                        cBatch,
                        cInvName,
                        iQuantity,
                        cInvStd,
                        iPrice,
                        iUnitCost}, this.outboundUpdateMainOperationCompleted, userState);
        }
        
        private void OnoutboundUpdateMainOperationCompleted(object arg) {
            if ((this.outboundUpdateMainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.outboundUpdateMainCompleted(this, new outboundUpdateMainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws", ResponseNamespace="http://ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outboundUpdateMainOrderReturn")]
        public int outboundUpdateMainOrder(int index, string cCode, string dDate, string cBusType, string cVenName, string cMemo, string cDepName) {
            object[] results = this.Invoke("outboundUpdateMainOrder", new object[] {
                        index,
                        cCode,
                        dDate,
                        cBusType,
                        cVenName,
                        cMemo,
                        cDepName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void outboundUpdateMainOrderAsync(int index, string cCode, string dDate, string cBusType, string cVenName, string cMemo, string cDepName) {
            this.outboundUpdateMainOrderAsync(index, cCode, dDate, cBusType, cVenName, cMemo, cDepName, null);
        }
        
        /// <remarks/>
        public void outboundUpdateMainOrderAsync(int index, string cCode, string dDate, string cBusType, string cVenName, string cMemo, string cDepName, object userState) {
            if ((this.outboundUpdateMainOrderOperationCompleted == null)) {
                this.outboundUpdateMainOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoutboundUpdateMainOrderOperationCompleted);
            }
            this.InvokeAsync("outboundUpdateMainOrder", new object[] {
                        index,
                        cCode,
                        dDate,
                        cBusType,
                        cVenName,
                        cMemo,
                        cDepName}, this.outboundUpdateMainOrderOperationCompleted, userState);
        }
        
        private void OnoutboundUpdateMainOrderOperationCompleted(object arg) {
            if ((this.outboundUpdateMainOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.outboundUpdateMainOrderCompleted(this, new outboundUpdateMainOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws", ResponseNamespace="http://ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("outboundDeleteMainReturn")]
        public int outboundDeleteMain(int index) {
            object[] results = this.Invoke("outboundDeleteMain", new object[] {
                        index});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void outboundDeleteMainAsync(int index) {
            this.outboundDeleteMainAsync(index, null);
        }
        
        /// <remarks/>
        public void outboundDeleteMainAsync(int index, object userState) {
            if ((this.outboundDeleteMainOperationCompleted == null)) {
                this.outboundDeleteMainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnoutboundDeleteMainOperationCompleted);
            }
            this.InvokeAsync("outboundDeleteMain", new object[] {
                        index}, this.outboundDeleteMainOperationCompleted, userState);
        }
        
        private void OnoutboundDeleteMainOperationCompleted(object arg) {
            if ((this.outboundDeleteMainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.outboundDeleteMainCompleted(this, new outboundDeleteMainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("", RequestNamespace="http://ws", ResponseNamespace="http://ws", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("testReturn")]
        public int test() {
            object[] results = this.Invoke("test", new object[0]);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void testAsync() {
            this.testAsync(null);
        }
        
        /// <remarks/>
        public void testAsync(object userState) {
            if ((this.testOperationCompleted == null)) {
                this.testOperationCompleted = new System.Threading.SendOrPostCallback(this.OntestOperationCompleted);
            }
            this.InvokeAsync("test", new object[0], this.testOperationCompleted, userState);
        }
        
        private void OntestOperationCompleted(object arg) {
            if ((this.testCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.testCompleted(this, new testCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void outboundInsertMainCompletedEventHandler(object sender, outboundInsertMainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class outboundInsertMainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal outboundInsertMainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void outboundUpdateMainCompletedEventHandler(object sender, outboundUpdateMainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class outboundUpdateMainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal outboundUpdateMainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void outboundUpdateMainOrderCompletedEventHandler(object sender, outboundUpdateMainOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class outboundUpdateMainOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal outboundUpdateMainOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void outboundDeleteMainCompletedEventHandler(object sender, outboundDeleteMainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class outboundDeleteMainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal outboundDeleteMainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void testCompletedEventHandler(object sender, testCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class testCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal testCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591